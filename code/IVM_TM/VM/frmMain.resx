<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picLogo1.ErrorImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        yeeP8MLj/wrCfR2hWhKtAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="tmrRushReflash.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn9.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewTextBoxColumn10.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="dataGridViewButtonColumn1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ColumnTime.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ColumnType.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ColumnMoney.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="ColumnName.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Num.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Other.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="mmuStatistic.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>161, 3</value>
  </metadata>
  <metadata name="name.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="time.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="money.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="rate.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="inverst.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
</root>